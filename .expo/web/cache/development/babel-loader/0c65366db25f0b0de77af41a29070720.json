{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { Link } from \"@react-navigation/native\";\nexport function SignUp(params) {\n  var navigation = params.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setpassword = _useState6[1];\n\n  var checkInput = function checkInput(string) {\n    if (typeof name !== \"string\") {\n      alert('Please enter name');\n      return;\n    }\n\n    if (typeof email !== \"string\") {\n      alert('Please enter email');\n      return;\n    }\n\n    if (typeof password !== \"string\") {\n      alert('Please enter password');\n      return;\n    } else {\n      navigation.navigate('Products');\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    style: styles.bgImage,\n    source: require(\"../assets/products/Logo.png\")\n  }), React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Full name\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setName(value);\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/color/40/000000/circled-user-male-skin-type-3.png'\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Email\",\n    keyboardType: \"email-address\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/flat_round/40/000000/secured-letter.png'\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    style: styles.inputs,\n    placeholder: \"Password\",\n    secureTextEntry: true,\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setpassword(value);\n    }\n  }), React.createElement(Image, {\n    style: styles.inputIcon,\n    source: {\n      uri: 'https://img.icons8.com/color/40/000000/password.png'\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.btnByRegister,\n    onPress: function onPress() {\n      Alert.alert('Okayy');\n    }\n  }, React.createElement(Text, {\n    style: styles.textByRegister\n  }, \"By registering on this App you confirm that you have read and accept our policy\")), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, styles.loginButton],\n    onPress: checkInput\n  }, React.createElement(Text, {\n    style: styles.loginText\n  }, \"Login\")), React.createElement(TouchableOpacity, {\n    style: styles.buttonContainer,\n    onPress: function onPress() {\n      navigation.navigate('Login');\n    }\n  }, React.createElement(Text, {\n    style: styles.btnText\n  }, \"Have an account?\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#DCDCDC'\n  },\n  inputContainer: {\n    borderBottomColor: '#F5FCFF',\n    backgroundColor: '#FFFFFF',\n    borderRadius: 30,\n    borderBottomWidth: 1,\n    width: 300,\n    height: 45,\n    marginBottom: 20,\n    flexDirection: 'row',\n    alignItems: 'center',\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5\n  },\n  inputs: {\n    height: 45,\n    marginLeft: 16,\n    borderBottomColor: '#FFFFFF',\n    flex: 1\n  },\n  inputIcon: {\n    width: 30,\n    height: 30,\n    marginRight: 15,\n    justifyContent: 'center'\n  },\n  buttonContainer: {\n    height: 45,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 20,\n    width: 300,\n    borderRadius: 30,\n    backgroundColor: 'transparent'\n  },\n  btnByRegister: {\n    height: 15,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 20,\n    width: 300,\n    backgroundColor: 'transparent'\n  },\n  loginButton: {\n    backgroundColor: \"#00b5ec\",\n    shadowColor: \"#808080\",\n    shadowOffset: {\n      width: 0,\n      height: 9\n    },\n    shadowOpacity: 0.50,\n    shadowRadius: 12.35,\n    elevation: 19\n  },\n  loginText: {\n    color: 'white'\n  },\n  bgImage: {\n    flex: 1,\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    justifyContent: 'center'\n  },\n  btnText: {\n    color: \"white\",\n    fontWeight: 'bold',\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  },\n  textByRegister: {\n    color: \"white\",\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textShadowColor: 'rgba(0, 0, 0, 0.75)',\n    textShadowOffset: {\n      width: -1,\n      height: 1\n    },\n    textShadowRadius: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/OneDrive/Desktop/App/screens/SignUp.js"],"names":["React","useState","StatusBar","SafeAreaView","AntDesign","Link","SignUp","params","navigation","name","setName","email","setEmail","password","setpassword","checkInput","string","alert","navigate","styles","container","bgImage","require","inputContainer","inputs","value","inputIcon","uri","btnByRegister","Alert","textByRegister","buttonContainer","loginButton","loginText","btnText","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","borderBottomColor","borderRadius","borderBottomWidth","width","height","marginBottom","flexDirection","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","marginLeft","marginRight","marginVertical","color","position","fontWeight","textShadowColor","textShadowOffset","textShadowRadius","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { View, Text, Image, TextInput, StyleSheet, TouchableOpacity, Alert } from \"react-native\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\nimport { AntDesign } from \"@expo/vector-icons\";\r\nimport { Link } from \"@react-navigation/native\";\r\n\r\nexport function SignUp(params) {\r\n  const navigation = params.navigation;\r\n  const [name, setName] = useState(0);\r\n  const [email, setEmail] = useState(0);\r\n  const [password, setpassword] = useState(0);\r\n\r\n  const checkInput = (string) =>\r\n  {\r\n    if(typeof(name) !== \"string\"){  // check if the string variable is some type other than string\r\n      alert('Please enter name');\r\n      return;\r\n    }\r\n    if(typeof(email) !== \"string\"){  // check if the string variable is some type other than string\r\n      alert('Please enter email');\r\n      return;\r\n    }\r\n    if(typeof(password) !== \"string\") {\r\n      alert('Please enter password');\r\n      return;\r\n    }\r\n    else {\r\n      navigation.navigate('Products');\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n        <Image style={styles.bgImage} source={require('../assets/products/Logo.png')}/>\r\n        <View style={styles.inputContainer}>\r\n          <TextInput style={styles.inputs}\r\n              placeholder=\"Full name\"\r\n              underlineColorAndroid='transparent'\r\n              onChangeText={(value) => setName(value)}/>\r\n          <Image style={styles.inputIcon} source={{uri: 'https://img.icons8.com/color/40/000000/circled-user-male-skin-type-3.png'}}/>\r\n        </View>\r\n\r\n        <View style={styles.inputContainer}>\r\n          <TextInput style={styles.inputs}\r\n              placeholder=\"Email\"\r\n              keyboardType=\"email-address\"\r\n              underlineColorAndroid='transparent'\r\n              onChangeText={(value) => setEmail(value)}/>\r\n          <Image style={styles.inputIcon} source={{uri: 'https://img.icons8.com/flat_round/40/000000/secured-letter.png'}}/>\r\n        </View>\r\n        \r\n        <View style={styles.inputContainer}>\r\n          <TextInput style={styles.inputs}\r\n              placeholder=\"Password\"\r\n              secureTextEntry={true}\r\n              underlineColorAndroid='transparent'\r\n              onChangeText={(value) => setpassword(value)}/>\r\n          <Image style={styles.inputIcon} source={{uri: 'https://img.icons8.com/color/40/000000/password.png'}}/>\r\n        </View>\r\n\r\n        <TouchableOpacity style={styles.btnByRegister} onPress={() => {Alert.alert('Okayy')}}>\r\n            <Text style={styles.textByRegister}>By registering on this App you confirm that you have read and accept our policy</Text>\r\n        </TouchableOpacity>\r\n\r\n        <TouchableOpacity \r\n            style={[styles.buttonContainer, styles.loginButton]} \r\n            onPress={checkInput}\r\n        >\r\n          <Text style={styles.loginText}>Login</Text>\r\n        </TouchableOpacity>\r\n\r\n\r\n        <TouchableOpacity style={styles.buttonContainer} onPress={() => {navigation.navigate('Login')}}>\r\n            <Text style={styles.btnText}>Have an account?</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      backgroundColor: '#DCDCDC',\r\n    },\r\n    inputContainer: {\r\n      borderBottomColor: '#F5FCFF',\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius:30,\r\n      borderBottomWidth: 1,\r\n      width:300,\r\n      height:45,\r\n      marginBottom:20,\r\n      flexDirection: 'row',\r\n      alignItems:'center',\r\n  \r\n      shadowColor: \"#808080\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2,\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n  \r\n      elevation: 5,\r\n    },\r\n    inputs:{\r\n      height:45,\r\n      marginLeft:16,\r\n      borderBottomColor: '#FFFFFF',\r\n      flex:1,\r\n    },\r\n    inputIcon:{\r\n      width:30,\r\n      height:30,\r\n      marginRight:15,\r\n      justifyContent: 'center'\r\n    },\r\n    buttonContainer: {\r\n      height:45,\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginBottom:20,\r\n      width:300,\r\n      borderRadius:30,\r\n      backgroundColor:'transparent'\r\n    },\r\n    btnByRegister: {\r\n      height:15,\r\n      flexDirection: 'row',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      marginVertical:20,\r\n      width:300,\r\n      backgroundColor:'transparent'\r\n    },\r\n    loginButton: {\r\n      backgroundColor: \"#00b5ec\",\r\n  \r\n      shadowColor: \"#808080\",\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 9,\r\n      },\r\n      shadowOpacity: 0.50,\r\n      shadowRadius: 12.35,\r\n  \r\n      elevation: 19,\r\n    },\r\n    loginText: {\r\n      color: 'white',\r\n    },\r\n    bgImage:{\r\n      flex: 1,\r\n      position: 'absolute',\r\n      width: '100%',\r\n      height: '100%',\r\n      justifyContent: 'center',\r\n    },\r\n    btnText:{\r\n      color:\"white\",\r\n      fontWeight:'bold',\r\n      textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n      textShadowOffset: {width: -1, height: 1},\r\n      textShadowRadius: 10\r\n    },\r\n    textByRegister:{\r\n      color:\"white\",\r\n      fontWeight:'bold',\r\n      textAlign:'center',\r\n  \r\n      textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n      textShadowOffset: {width: -1, height: 1},\r\n      textShadowRadius: 10\r\n    }\r\n  }); "]},"metadata":{},"sourceType":"module"}