{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nexport function Checkout(params) {\n  var navigation = params.navigation;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      fname = _useState2[0],\n      setFName = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lname = _useState4[0],\n      setLname = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phone = _useState8[0],\n      setPhone = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setEmail = _useState10[1];\n\n  var checkInput = function checkInput(string) {\n    if (typeof fname !== \"string\") {\n      alert('Please enter first name');\n      return;\n    }\n\n    if (typeof lname !== \"string\") {\n      alert('Please enter last name');\n      return;\n    }\n\n    if (typeof address !== \"string\") {\n      alert('Please enter address');\n      return;\n    }\n\n    if (typeof phone !== \"string\") {\n      alert('Please enter phone');\n      return;\n    }\n\n    if (typeof email !== \"string\") {\n      alert('Please enter email');\n      return;\n    } else {\n      navigation.navigate('CCInfo');\n    }\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container\n  }, React.createElement(ImageBackground, {\n    source: require(\"../assets/products/Image 7.jpg\"),\n    style: styles.bgImage\n  }, React.createElement(View, {\n    style: styles.mainContainer\n  }, React.createElement(View, {\n    style: styles.ainputContainer\n  }, React.createElement(View, {\n    style: styles.labinputContainer\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"First name\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setFName(value);\n    }\n  })), React.createElement(View, {\n    style: styles.rabinputContainer\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Last name\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setLname(value);\n    }\n  }))), React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Address\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setAddress(value);\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Phone\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setPhone(value);\n    }\n  })), React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Email\",\n    underlineColorAndroid: \"transparent\",\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: checkInput,\n    style: styles.continueBtn\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      fontSize: 17,\n      backgroundColor: 'white'\n    }\n  }, \"Continue to Payment info\")))), React.createElement(StatusBar, {\n    style: \"auto\"\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    backgroundColor: '#DCDCDC'\n  },\n  mainContainer: {\n    justifyContent: 'center',\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  inputContainer: {\n    backgroundColor: 'white',\n    margin: 10,\n    paddingHorizontal: 20,\n    width: 370,\n    borderRadius: 10\n  },\n  ainputContainer: {\n    flexDirection: \"row\"\n  },\n  labinputContainer: {\n    backgroundColor: 'white',\n    margin: 5,\n    paddingHorizontal: 10,\n    width: 180,\n    borderRadius: 10\n  },\n  rabinputContainer: {\n    backgroundColor: 'white',\n    margin: 5,\n    paddingHorizontal: 10,\n    width: 180,\n    borderRadius: 10\n  },\n  textInput: {\n    padding: 15,\n    fontSize: 15\n  },\n  textInput: {\n    padding: 15,\n    fontSize: 15\n  },\n  continueBtn: {\n    backgroundColor: '#fff',\n    padding: 15,\n    paddingHorizontal: 20,\n    borderRadius: 30,\n    margin: 20,\n    width: 250,\n    alignItems: \"center\",\n    shadowColor: 'blue'\n  },\n  bgImage: {\n    flex: 1,\n    position: \"relative\",\n    width: '100%',\n    height: '100%',\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/OneDrive/Desktop/App/screens/Checkout.js"],"names":["React","useState","StatusBar","SafeAreaView","Checkout","params","navigation","fname","setFName","lname","setLname","address","setAddress","phone","setPhone","email","setEmail","checkInput","string","alert","navigate","styles","container","require","bgImage","mainContainer","ainputContainer","labinputContainer","textInput","value","rabinputContainer","inputContainer","continueBtn","fontWeight","fontSize","backgroundColor","StyleSheet","create","flex","justifyContent","alignItems","marginBottom","margin","paddingHorizontal","width","borderRadius","flexDirection","padding","shadowColor","position","height"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { View, Text, TextInput, StyleSheet, TouchableOpacity, ImageBackground } from \"react-native\";\r\nimport { SafeAreaView } from \"react-native-safe-area-context\";\r\n\r\nexport function Checkout(params) {\r\n  const navigation = params.navigation;\r\n  const [fname, setFName] = useState(0);\r\n  const [lname, setLname] = useState(0);\r\n  const [address, setAddress] = useState(0);\r\n  const [phone, setPhone] = useState(0);\r\n  const [email, setEmail] = useState(0);\r\n\r\n  const checkInput = (string) =>\r\n  {\r\n    if(typeof(fname) !== \"string\"){  // check if the string variable is some type other than string\r\n      alert('Please enter first name');\r\n      return;\r\n    }\r\n    if(typeof(lname) !== \"string\"){  // check if the string variable is some type other than string\r\n      alert('Please enter last name');\r\n      return;\r\n    }\r\n    if(typeof(address) !== \"string\"){  // check if the string variable is some type other than string\r\n      alert('Please enter address');\r\n      return;\r\n    }\r\n    if(typeof(phone) !== \"string\"){  // check if the string variable is some type other than string\r\n      alert('Please enter phone');\r\n      return;\r\n    }\r\n    if(typeof(email) !== \"string\") {\r\n      alert('Please enter email');\r\n      return;\r\n    }\r\n    else {\r\n      navigation.navigate('CCInfo');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <ImageBackground source={require('../assets/products/Image 7.jpg')} style={styles.bgImage}>\r\n        <View style={styles.mainContainer}>\r\n          <View style={styles.ainputContainer}>\r\n            <View style={styles.labinputContainer}>\r\n            <TextInput \r\n              style = {styles.textInput}\r\n              placeholder = \"First name\"\r\n              underlineColorAndroid= \"transparent\"\r\n              onChangeText={(value) => setFName(value)}\r\n            />\r\n            </View>\r\n            <View style={styles.rabinputContainer}>\r\n            <TextInput \r\n              style = {styles.textInput}\r\n              placeholder = \"Last name\"\r\n              underlineColorAndroid= \"transparent\"\r\n              onChangeText={(value) => setLname(value)}\r\n            />\r\n            </View>\r\n          </View>\r\n          <View style={styles.inputContainer}>\r\n          <TextInput \r\n            style = {styles.textInput}\r\n            placeholder = \"Address\"\r\n            underlineColorAndroid= \"transparent\"\r\n            onChangeText={(value) => setAddress(value)}\r\n          />\r\n          </View>\r\n          <View style={styles.inputContainer}>\r\n          <TextInput \r\n            style = {styles.textInput}\r\n            placeholder = \"Phone\"\r\n            underlineColorAndroid= \"transparent\"\r\n            onChangeText={(value) => setPhone(value)}\r\n          />\r\n          </View>\r\n          <View style={styles.inputContainer}>\r\n          <TextInput \r\n            style = {styles.textInput}\r\n            placeholder = \"Email\"\r\n            underlineColorAndroid= \"transparent\"\r\n            onChangeText={(value) => setEmail(value)}\r\n          />\r\n          </View>\r\n          \r\n          <TouchableOpacity onPress={checkInput} style={styles.continueBtn}>\r\n            <Text style={{fontWeight: \"bold\", fontSize: 17, backgroundColor: 'white'}}>Continue to Payment info</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ImageBackground>\r\n      <StatusBar style={\"auto\"}/>\r\n    </SafeAreaView>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: 'center',\r\n      backgroundColor: '#DCDCDC',\r\n    },\r\n    mainContainer: {\r\n      justifyContent: 'center',\r\n      alignItems: \"center\",\r\n      marginBottom: 20,\r\n    },\r\n    inputContainer: {\r\n      backgroundColor: 'white',\r\n      margin: 10,\r\n      paddingHorizontal: 20,\r\n      width: 370,\r\n      borderRadius: 10,\r\n    },\r\n    ainputContainer: {\r\n      flexDirection: \"row\",\r\n    },\r\n    labinputContainer: {\r\n      backgroundColor: 'white',\r\n      margin: 5,\r\n      paddingHorizontal: 10,\r\n      width: 180,\r\n      borderRadius: 10,\r\n    },\r\n    rabinputContainer: {\r\n      backgroundColor: 'white',\r\n      margin: 5,\r\n      paddingHorizontal: 10,\r\n      width: 180,\r\n      borderRadius: 10,\r\n    },\r\n    textInput: {\r\n      padding: 15,\r\n      fontSize: 15,\r\n    },\r\n    textInput: {\r\n      padding: 15,\r\n      fontSize: 15,\r\n    },\r\n    continueBtn: {\r\n      backgroundColor: '#fff',\r\n      padding: 15,\r\n      paddingHorizontal: 20,\r\n      borderRadius: 30,\r\n      margin: 20,\r\n      width: 250,\r\n      alignItems: \"center\",\r\n      shadowColor: 'blue',\r\n    },\r\n    bgImage:{\r\n      flex:1,\r\n      position: \"relative\",\r\n      width: '100%',\r\n      height: '100%',\r\n      justifyContent: \"center\"\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}